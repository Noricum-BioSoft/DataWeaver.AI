"""Add design-build-test workflow tables

Revision ID: f7c123bd3c74
Revises: 002
Create Date: 2025-07-15 13:59:30.085196

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f7c123bd3c74'
down_revision = '002'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('datasets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('source_provider', sa.String(length=255), nullable=True),
    sa.Column('source_file_path', sa.String(length=500), nullable=True),
    sa.Column('file_type', sa.String(length=50), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'MATCHED', 'UNMATCHED', 'ERROR', name='datasetstatus'), nullable=True),
    sa.Column('matching_config', sa.JSON(), nullable=True),
    sa.Column('identifiers', sa.JSON(), nullable=True),
    sa.Column('row_count', sa.Integer(), nullable=True),
    sa.Column('column_count', sa.Integer(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_datasets_id'), 'datasets', ['id'], unique=False)
    op.create_table('design_phases',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('design_name', sa.String(), nullable=False),
    sa.Column('original_sequence', sa.Text(), nullable=False),
    sa.Column('optimized_sequence', sa.Text(), nullable=True),
    sa.Column('vector_sequence', sa.Text(), nullable=True),
    sa.Column('host_organism', sa.String(), nullable=True),
    sa.Column('expression_system', sa.String(), nullable=True),
    sa.Column('design_parameters', sa.JSON(), nullable=True),
    sa.Column('optimization_score', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_design_phases_project_id'), 'design_phases', ['project_id'], unique=False)
    op.create_table('workflow_projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_name', sa.String(), nullable=False),
    sa.Column('project_description', sa.Text(), nullable=True),
    sa.Column('target_protein', sa.String(), nullable=True),
    sa.Column('project_manager', sa.String(), nullable=True),
    sa.Column('priority', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('target_completion', sa.DateTime(), nullable=True),
    sa.Column('actual_completion', sa.DateTime(), nullable=True),
    sa.Column('budget', sa.Float(), nullable=True),
    sa.Column('vendor_costs', sa.Float(), nullable=True),
    sa.Column('test_costs', sa.Float(), nullable=True),
    sa.Column('project_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workflows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', name='workflowstatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('workflow_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workflows_id'), 'workflows', ['id'], unique=False)
    op.create_table('build_phases',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('design_id', sa.UUID(), nullable=False),
    sa.Column('build_name', sa.String(), nullable=False),
    sa.Column('vendor_name', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.String(), nullable=True),
    sa.Column('order_date', sa.DateTime(), nullable=True),
    sa.Column('expected_completion', sa.DateTime(), nullable=True),
    sa.Column('actual_completion', sa.DateTime(), nullable=True),
    sa.Column('plasmid_concentration', sa.Float(), nullable=True),
    sa.Column('plasmid_volume', sa.Float(), nullable=True),
    sa.Column('sequence_verification', sa.String(), nullable=True),
    sa.Column('gel_analysis', sa.String(), nullable=True),
    sa.Column('qc_results', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['design_id'], ['design_phases.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workflow_correlations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('source_phase', sa.String(), nullable=False),
    sa.Column('target_phase', sa.String(), nullable=False),
    sa.Column('correlation_type', sa.String(), nullable=False),
    sa.Column('correlation_score', sa.Float(), nullable=True),
    sa.Column('correlation_data', sa.JSON(), nullable=True),
    sa.Column('analysis_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['workflow_projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workflow_files',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('phase_id', sa.UUID(), nullable=False),
    sa.Column('phase_type', sa.String(), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('file_type', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('upload_date', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('file_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['workflow_projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workflow_steps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('step_type', sa.Enum('INPUT', 'PROCESSING', 'OUTPUT', 'EXTERNAL', name='steptype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'SKIPPED', name='stepstatus'), nullable=True),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('external_provider', sa.String(length=255), nullable=True),
    sa.Column('external_config', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workflow_steps_id'), 'workflow_steps', ['id'], unique=False)
    op.create_table('files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.BigInteger(), nullable=False),
    sa.Column('file_type', sa.Enum('CSV', 'EXCEL', 'TEXT', 'JSON', 'XML', 'BINARY', 'OTHER', name='filetype'), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('status', sa.Enum('UPLOADING', 'PROCESSING', 'READY', 'ERROR', 'DELETED', name='filestatus'), nullable=True),
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.Column('input_step_id', sa.Integer(), nullable=True),
    sa.Column('output_step_id', sa.Integer(), nullable=True),
    sa.Column('parent_file_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['input_step_id'], ['workflow_steps.id'], ),
    sa.ForeignKeyConstraint(['output_step_id'], ['workflow_steps.id'], ),
    sa.ForeignKeyConstraint(['parent_file_id'], ['files.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_files_id'), 'files', ['id'], unique=False)
    op.create_table('test_phases',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('design_id', sa.UUID(), nullable=False),
    sa.Column('build_id', sa.UUID(), nullable=False),
    sa.Column('test_name', sa.String(), nullable=False),
    sa.Column('test_type', sa.String(), nullable=False),
    sa.Column('expression_level', sa.String(), nullable=True),
    sa.Column('protein_concentration', sa.Float(), nullable=True),
    sa.Column('enzyme_activity', sa.Float(), nullable=True),
    sa.Column('km_value', sa.Float(), nullable=True),
    sa.Column('vmax_value', sa.Float(), nullable=True),
    sa.Column('assay_conditions', sa.JSON(), nullable=True),
    sa.Column('test_results', sa.JSON(), nullable=True),
    sa.Column('quality_metrics', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['build_id'], ['build_phases.id'], ),
    sa.ForeignKeyConstraint(['design_id'], ['design_phases.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dataset_matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.Column('step_id', sa.Integer(), nullable=True),
    sa.Column('file_id', sa.Integer(), nullable=True),
    sa.Column('match_type', sa.Enum('EXACT', 'FUZZY', 'ML_BASED', 'MANUAL', name='matchtype'), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('matching_criteria', sa.JSON(), nullable=True),
    sa.Column('matched_identifiers', sa.JSON(), nullable=True),
    sa.Column('is_confirmed', sa.Integer(), nullable=True),
    sa.Column('confirmed_by', sa.String(length=255), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['datasets.id'], ),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], ),
    sa.ForeignKeyConstraint(['step_id'], ['workflow_steps.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dataset_matches_id'), 'dataset_matches', ['id'], unique=False)
    op.create_table('file_metadata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('data_type', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_file_metadata_id'), 'file_metadata', ['id'], unique=False)
    op.create_table('file_relationships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('related_file_id', sa.Integer(), nullable=False),
    sa.Column('relationship_type', sa.String(length=100), nullable=False),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], ),
    sa.ForeignKeyConstraint(['related_file_id'], ['files.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_file_relationships_id'), 'file_relationships', ['id'], unique=False)
    # Note: Keeping existing tables (designs, builds, tests) for backward compatibility
    # The new workflow tables are additive and don't replace the existing bio-entities system
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Note: Not recreating old tables (designs, builds, tests) as they should remain
    # The new workflow tables are additive and can be safely dropped
    op.drop_index(op.f('ix_file_relationships_id'), table_name='file_relationships')
    op.drop_table('file_relationships')
    op.drop_index(op.f('ix_file_metadata_id'), table_name='file_metadata')
    op.drop_table('file_metadata')
    op.drop_index(op.f('ix_dataset_matches_id'), table_name='dataset_matches')
    op.drop_table('dataset_matches')
    op.drop_table('test_phases')
    op.drop_index(op.f('ix_files_id'), table_name='files')
    op.drop_table('files')
    op.drop_index(op.f('ix_workflow_steps_id'), table_name='workflow_steps')
    op.drop_table('workflow_steps')
    op.drop_table('workflow_files')
    op.drop_table('workflow_correlations')
    op.drop_table('build_phases')
    op.drop_index(op.f('ix_workflows_id'), table_name='workflows')
    op.drop_table('workflows')
    op.drop_table('workflow_projects')
    op.drop_index(op.f('ix_design_phases_project_id'), table_name='design_phases')
    op.drop_table('design_phases')
    op.drop_index(op.f('ix_datasets_id'), table_name='datasets')
    op.drop_table('datasets')
    # ### end Alembic commands ### 